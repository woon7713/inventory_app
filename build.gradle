plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java { toolchain { languageVersion = JavaLanguageVersion.of(17) } }

configurations {
	compileOnly { extendsFrom annotationProcessor }
}

repositories { mavenCentral() }

ext { querydslVersion = '5.6.1' }

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	implementation "io.github.openfeign.querydsl:querydsl-jpa:${querydslVersion}:jakarta"
	annotationProcessor "io.github.openfeign.querydsl:querydsl-apt:${querydslVersion}:jakarta"

	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

def querydslDir = layout.buildDirectory.dir("generated/querydsl").get().asFile

tasks.withType(JavaCompile).configureEach {
	options.generatedSourceOutputDirectory.set(querydslDir)
}

sourceSets {
	main {
		java {
			srcDirs += [ querydslDir ]
		}
	}
}

clean {
	delete querydslDir
}

tasks.named('test') {
	useJUnitPlatform()
}